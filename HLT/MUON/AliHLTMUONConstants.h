#ifndef ALIHLTMUONCONSTANTS_H
#define ALIHLTMUONCONSTANTS_H
/* Copyright(c) 1998-2007, ALICE Experiment at CERN, All rights reserved. *
 * See cxx source for full Copyright notice                               */

/* $Id$ */

/**
 * @file   AliHLTMUONConstants.h
 * @author Indranil Das <indra.das@saha.ac.in>,
 *         Artur Szostak <artursz@iafrica.com>
 * @date   
 * @brief  Class containing various dimuon HLT constants used in the system.
 */

#include "AliHLTMUONTriggerRecordsBlockStruct.h"
#include "AliHLTMUONTrigRecsDebugBlockStruct.h"
#include "AliHLTMUONTriggerChannelsBlockStruct.h"
#include "AliHLTMUONRecHitsBlockStruct.h"
#include "AliHLTMUONClustersBlockStruct.h"
#include "AliHLTMUONChannelsBlockStruct.h"
#include "AliHLTMUONMansoTracksBlockStruct.h"
#include "AliHLTMUONMansoCandidatesBlockStruct.h"
#include "AliHLTMUONSinglesDecisionBlockStruct.h"
#include "AliHLTMUONPairsDecisionBlockStruct.h"

/**
 * AliHLTMUONConstants contains a list of global dimuon HLT specific constants
 * and constant structures used in the system.
 * Static methods are provided to access these values.
 */
class AliHLTMUONConstants
{
public:

	static const AliHLTMUONTriggerRecordStruct& NilTriggerRecordStruct()
	{
		return fgkNilTriggerRecordStruct;
	}

	static const AliHLTMUONTrigRecInfoStruct& NilTrigRecInfoStruct()
	{
		return fgkNilTrigRecInfoStruct;
	}

	static const AliHLTMUONTriggerChannelStruct& NilTriggerChannelStruct()
	{
		return fgkNilTriggerChannelStruct;
	}

	static const AliHLTMUONRecHitStruct& NilRecHitStruct()
	{
		return fgkNilRecHitStruct;
	}

	static const AliHLTMUONChannelStruct& NilChannelStruct()
	{
		return fgkNilChannelStruct;
	}

	static const AliHLTMUONClusterStruct& NilClusterStruct()
	{
		return fgkNilClusterStruct;
	}

	static const AliHLTMUONMansoTrackStruct& NilMansoTrackStruct()
	{
		return fgkNilMansoTrackStruct;
	}

	static const AliHLTMUONMansoRoIStruct& NilMansoRoIStruct()
	{
		return fgkNilMansoRoIStruct;
	}

	static const AliHLTMUONMansoCandidateStruct& NilMansoCandidateStruct()
	{
		return fgkNilMansoCandidateStruct;
	}

	static const AliHLTMUONTrackDecisionStruct& NilTrackDecisionStruct()
	{
		return fgkNilTrackDecisionStruct;
	}

	static const AliHLTMUONPairDecisionStruct& NilPairDecisionStruct()
	{
		return fgkNilPairDecisionStruct;
	}

	static const AliHLTComponentDataType& TriggerDDLStreamDataType()
	{
		return fgkTriggerDDLStreamDataType;
	}

	static const AliHLTComponentDataType& TrackingDDLStreamDataType()
	{
		return fgkTrackingDDLStreamDataType;
	}

	static const AliHLTComponentDataType& TriggerRecordsBlockDataType()
	{
		return fgkTriggerRecordsBlockDataType;
	}

	static const AliHLTComponentDataType& TrigRecsDebugBlockDataType()
	{
		return fgkTrigRecsDebugBlockDataType;
	}

	static const AliHLTComponentDataType& TriggerChannelBlockDataType()
	{
		return fgkTriggerChannelBlockDataType;
	}

	static const AliHLTComponentDataType& RecHitsBlockDataType()
	{
		return fgkRecHitsBlockDataType;
	}

	static const AliHLTComponentDataType& ClusterBlockDataType()
	{
		return fgkClusterBlockDataType;
	}

	static const AliHLTComponentDataType& ChannelBlockDataType()
	{
		return fgkChannelBlockDataType;
	}

	static const AliHLTComponentDataType& MansoTracksBlockDataType()
	{
		return fgkMansoTracksBlockDataType;
	}

	static const AliHLTComponentDataType& MansoCandidatesBlockDataType()
	{
		return fgkMansoCandidatesBlockDataType;
	}

	static const AliHLTComponentDataType& SinglesDecisionBlockDataType()
	{
		return fgkSinglesDecisionBlockDataType;
	}

	static const AliHLTComponentDataType& PairsDecisionBlockDataType()
	{
		return fgkPairsDecisionBlockDataType;
	}

private:

	// Should never have to create or destroy this object.
	AliHLTMUONConstants();
	~AliHLTMUONConstants();
	
	// The following are null/nil structures that can also be used as sentinels.
	static const AliHLTMUONTriggerRecordStruct fgkNilTriggerRecordStruct;
	static const AliHLTMUONTrigRecInfoStruct fgkNilTrigRecInfoStruct;
	static const AliHLTMUONTriggerChannelStruct fgkNilTriggerChannelStruct;
	static const AliHLTMUONRecHitStruct fgkNilRecHitStruct;
	static const AliHLTMUONChannelStruct fgkNilChannelStruct;
	static const AliHLTMUONClusterStruct fgkNilClusterStruct;
	static const AliHLTMUONMansoTrackStruct fgkNilMansoTrackStruct;
	static const AliHLTMUONMansoRoIStruct fgkNilMansoRoIStruct;
	static const AliHLTMUONMansoCandidateStruct fgkNilMansoCandidateStruct;
	static const AliHLTMUONTrackDecisionStruct fgkNilTrackDecisionStruct;
	static const AliHLTMUONPairDecisionStruct fgkNilPairDecisionStruct;

	// DDL packed data block type from dimuon trigger stations.
	static const AliHLTComponentDataType fgkTriggerDDLStreamDataType;

	// DDL packed data block type from dimuon tracking stations.
	static const AliHLTComponentDataType fgkTrackingDDLStreamDataType;

	// Trigger records block type generated by trigger DDL translation components.
	static const AliHLTComponentDataType fgkTriggerRecordsBlockDataType;

	// Debugging information block type generated by trigger DDL translation components.
	static const AliHLTComponentDataType fgkTrigRecsDebugBlockDataType;

	// Debugging information about the channels from the hardware trigger.
	static const AliHLTComponentDataType fgkTriggerChannelBlockDataType;

	// Reconstructed hits block type generated by hit reconstruction components.
	static const AliHLTComponentDataType fgkRecHitsBlockDataType;

	// Debugging information block type for reconstructed hit clusters.
	static const AliHLTComponentDataType fgkClusterBlockDataType;

	// Debugging information block type for channels corresponding to clusters.
	static const AliHLTComponentDataType fgkChannelBlockDataType;

	// Manso tracks block type generated by Manso tracker components.
	static const AliHLTComponentDataType fgkMansoTracksBlockDataType;

	// Debugging information about a track candidate generated by the Manso algorithm.
	static const AliHLTComponentDataType fgkMansoCandidatesBlockDataType;

	// Trigger decision block type for single track decisions.
	static const AliHLTComponentDataType fgkSinglesDecisionBlockDataType;

	// Trigger decision block type for pairs of particles.
	static const AliHLTComponentDataType fgkPairsDecisionBlockDataType;
};

#endif // ALIHLTMUONCONSTANTS_H
