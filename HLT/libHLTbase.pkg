#-*- Mode: Makefile -*-
# $Id$

include $(MODDIR)/hlt.conf

CLASS_HDRS:=  	AliHLTComponent.h \
		AliHLTComponentHandler.h \
		AliHLTSystem.h \
		AliHLTProcessor.h \
		AliHLTCalibrationProcessor.h \
		AliHLTConfiguration.h \
		AliHLTConfigurationHandler.h \
		AliHLTTask.h \
		AliHLTLogging.h \
		AliHLTDataBuffer.h \
		AliHLTConsumerDescriptor.h \
		AliHLTDataSource.h \
		AliHLTDataSink.h \
		AliHLTOfflineInterface.h \
		AliHLTOfflineDataSource.h \
		AliHLTOfflineDataSink.h \
		AliHLTModuleAgent.h \
		AliHLTModulePreprocessor.h \
		AliHLTShuttleInterface.h \
		AliHLTHOMERLibManager.h \
		AliHLTHOMERBlockDesc.h \
		AliHLTHOMERSourceDesc.h \
		AliHLTOUT.h \
		AliHLTOUTHomerBuffer.h \
		AliHLTOUTHandler.h \
		AliHLTOUTHandlerEquId.h \
		AliHLTMemoryFile.h \
		AliHLTMessage.h \
		AliHLTEventStatistics.h \
                AliHLTRunStatistics.h



MODULE_SRCS= 	AliHLT_C_Component_WrapperInterface.cxx \
		AliHLTDataTypes.cxx \
		$(CLASS_HDRS:.h=.cxx)

MODULE_HDRS:= 	$(CLASS_HDRS) \
		AliHLTDataTypes.h \
		AliHLTMisc.h \
		AliHLT_C_Component_WrapperInterface.h \
		AliHLTDefinitions.h \
		AliHLTStdIncludes.h

MODULE_DHDR:=

SRCS:=$(patsubst %,BASE/%,$(MODULE_SRCS))
CINTHDRS:=$(patsubst %,BASE/%,$(CLASS_HDRS))
HDRS:=$(patsubst %,BASE/%,$(MODULE_HDRS))
DHDR:=$(patsubst %,BASE/%,$(MODULE_DHDR))
CINTAUTOLINK:= $(shell test "x$(MODULE_DHDR)" = "x" && echo 1)

EDEFINE      := ${HLTDEFS}
PACKCXXFLAGS := ${HLTCXXFLAGS}
PACKCFLAGS   := ${HLTCLFAGS}
PACKDCXXFLAGS:= ${HLTDCXXFLAGS}

# the libHLTbase depends on the abstract interface of the monitoring reader
# and needs include patch HLT/BASE/HOMER because of that. There is no library
# dependency. Objects are intantianted dynamically.
EINCLUDE := HLT/BASE HLT/BASE/HOMER
