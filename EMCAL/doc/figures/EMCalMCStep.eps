%!PS-Adobe-2.0 EPSF-2.0
%%Title: EMCalMCStep.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Fri Mar  1 16:36:39 2013
%%For: nilsen@ALICE00 (Bjorn S. Nilsen)
%%BoundingBox: 0 0 341 536
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 536 moveto 0 0 lineto 341 0 lineto 341 536 lineto closepath clip newpath
-129.8 564.5 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<8020004010002008001004000802000401000200
	8001004000802000401080200040100020080010
	0400080200040100020080010040008020004010>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
/Times-Roman ff 360.00 scf sf
2925 8925 m
gs 1 -1 sc (S) col1 sh gr
/Times-Roman ff 300.00 scf sf
3150 9075 m
gs 1 -1 sc (i) col1 sh gr
/Times-Roman ff 360.00 scf sf
7200 1725 m
gs 1 -1 sc (S) col1 sh gr
/Times-Roman ff 300.00 scf sf
7425 1875 m
gs 1 -1 sc (i+1) col1 sh gr
% Arc
60.000 slw
 [150] 0 sd
n 11322.3 9481.9 8747.0 -173.9 -121.5 arc
gs col1 s gr
 [] 0 sd
% Ellipse
7.500 slw
n 2625 8550 150 150 0 360 DrawEllipse gs col1 1.00 shd ef gr gs col1 s gr

% Ellipse
n 6734 2033 150 150 0 360 DrawEllipse gs col1 1.00 shd ef gr gs col1 s gr

% Polyline
30.000 slw
gs  clippath
7362 924 m 7199 848 l 7013 1248 l 7247 960 l 7176 1324 l cp
eoclip
n 6750 2025 m
 7275 900 l gs col1 s gr gr

% arrowhead
n 7176 1324 m 7247 960 l 7013 1248 l  col1 s
% Polyline
gs  clippath
2700 8519 m 2521 8538 l 2567 8977 l 2620 8610 l 2746 8958 l cp
eoclip
n 2700 9375 m
 2613 8544 l gs col1 s gr gr

% arrowhead
n 2746 8958 m 2620 8610 l 2567 8977 l  col1 s
% Polyline
7.500 slw
n 2175 3300 m 5475 2625 l 6750 600 l 2175 600 l
 cp gs /PC [[1.00 1.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 145.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
15.000 slw
gs  clippath
6668 2071 m 6708 1991 l 6504 1889 l 6645 2010 l 6463 1969 l cp
6081 1678 m 6041 1758 l 6245 1860 l 6105 1740 l 6286 1780 l cp
eoclip
n 6075 1725 m
 6675 2025 l gs col0 s gr gr

% arrowhead
n 6286 1780 m 6105 1740 l 6245 1860 l  col0 s
% arrowhead
n 6463 1969 m 6645 2010 l 6504 1889 l  col0 s
/Times-Roman ff 360.00 scf sf
4050 5550 m
gs 1 -1 sc (t) col4 sh gr
/Times-Roman ff 360.00 scf sf
6525 1800 m
gs 1 -1 sc  60.0 rot (Precision) col0 sh gr
% Arc
gs  clippath
4241 6033 m 4322 5993 l 4222 5788 l 4261 5970 l 4141 5827 l cp
2805 5834 m 2876 5889 l 3016 5709 l 2870 5824 l 2945 5654 l cp
eoclip
n 3528.5 6247.8 786.5 -149.6 -18.4 arc
gs col4 s gr
 gr

% arrowhead
n 4141 5827 m 4261 5970 l 4222 5788 l  col4 s
% arrowhead
n 2945 5654 m 2870 5824 l 3016 5709 l  col4 s
% Polyline
30.000 slw
 [15 60] 60 sd
n 2625 8625 m
 3000 4200 l gs col4 s gr  [] 0 sd
% Polyline
 [15 60] 60 sd
n 2625 8625 m
 6750 2025 l gs col4 s gr  [] 0 sd
% Polyline
n 2610 8565 m 2610 8535 l 2640 8520 l 2640 8490 l 2670 8475 l 2670 8445 l
 2685 8415 l 2685 8385 l 2700 8355 l 2700 8325 l 2715 8295 l
 2715 8265 l 2715 8235 l 2715 8205 l 2715 8175 l 2715 8145 l
 2700 8115 l 2685 8085 l 2655 8055 l 2625 8025 l 2610 7995 l
 2595 7965 l 2610 7935 l 2625 7905 l 2625 7875 l 2625 7845 l
 2655 7830 l 2655 7800 l 2670 7770 l 2685 7740 l 2685 7710 l
 2715 7680 l 2715 7650 l 2745 7635 l 2760 7605 l 2775 7575 l
 2790 7545 l 2820 7545 l 2835 7515 l 2865 7515 l 2895 7500 l
 2895 7470 l 2925 7440 l 2955 7425 l 2970 7395 l 2970 7365 l
 2985 7335 l 3000 7305 l 3015 7275 l 3015 7245 l 3015 7215 l
 3015 7185 l 3015 7155 l 3015 7125 l 3015 7095 l 3015 7065 l
 3015 7035 l 3000 7005 l 3000 6975 l 2985 6945 l 2970 6915 l
 2940 6900 l 2940 6870 l 2910 6840 l 2895 6810 l 2895 6780 l
 2895 6750 l 2880 6720 l 2880 6690 l 2880 6660 l 2880 6630 l
 2880 6600 l 2880 6570 l 2895 6540 l 2895 6510 l 2910 6480 l
 2925 6450 l 2955 6435 l 2970 6405 l 3000 6390 l 3015 6360 l
 3045 6330 l 3060 6300 l 3090 6285 l 3105 6255 l 3120 6225 l
 3135 6195 l 3135 6165 l 3150 6135 l 3165 6105 l 3180 6075 l
 3180 6045 l 3210 6030 l 3225 6000 l 3240 5970 l 3255 5940 l
 3270 5910 l 3285 5880 l 3285 5850 l 3300 5820 l 3330 5790 l
 3330 5760 l 3360 5745 l 3390 5730 l 3420 5715 l 3450 5715 l
 3480 5700 l 3510 5685 l 3540 5670 l 3585 5655 l 3615 5640 l
 3645 5625 l 3660 5595 l 3690 5565 l 3720 5535 l 3735 5505 l
 3735 5475 l 3750 5445 l 3750 5415 l 3750 5385 l 3765 5355 l
 3765 5325 l 3765 5295 l 3765 5265 l 3780 5235 l 3780 5205 l
 3795 5175 l 3795 5130 l 3810 5100 l 3810 5070 l 3810 5040 l
 3810 5010 l 3810 4980 l 3810 4950 l 3810 4920 l 3810 4890 l
 3810 4860 l 3810 4830 l 3810 4800 l 3810 4770 l 3825 4740 l
 3840 4710 l 3855 4680 l 3855 4650 l 3855 4620 l 3855 4590 l
 3855 4560 l 3870 4530 l 3870 4500 l 3900 4485 l 3930 4470 l
 3960 4470 l 3975 4440 l 4005 4425 l 4035 4410 l 4065 4380 l
 4095 4380 l 4110 4350 l 4140 4335 l 4155 4305 l 4185 4290 l
 4215 4290 l 4245 4275 l 4275 4260 l 4305 4260 l 4335 4260 l
 4365 4245 l 4395 4245 l 4425 4245 l 4455 4230 l 4485 4230 l
 4515 4215 l 4530 4185 l 4560 4170 l 4590 4155 l 4620 4110 l
 4650 4110 l 4680 4095 l 4680 4065 l 4695 4035 l 4710 4005 l
 4725 3975 l 4725 3945 l 4740 3915 l 4740 3885 l 4725 3855 l
 4725 3825 l 4725 3795 l 4725 3765 l 4725 3735 l 4725 3705 l
 4725 3675 l 4740 3645 l 4740 3615 l 4740 3585 l 4740 3555 l
 4740 3525 l 4770 3510 l 4770 3480 l 4770 3450 l 4785 3420 l
 4785 3390 l 4800 3360 l 4815 3330 l 4845 3315 l 4845 3285 l
 4875 3270 l 4905 3270 l 4935 3255 l 4965 3255 l 4980 3225 l
 5010 3225 l 5040 3210 l 5070 3195 l 5100 3195 l 5130 3180 l
 5160 3180 l 5190 3165 l 5220 3150 l 5250 3150 l 5280 3150 l
 5310 3150 l 5340 3150 l 5370 3150 l 5400 3150 l 5430 3135 l
 5460 3135 l 5490 3135 l 5520 3135 l 5550 3135 l 5580 3120 l
 5610 3120 l 5640 3120 l 5670 3105 l 5700 3105 l 5730 3090 l
 5760 3075 l 5775 3045 l 5805 3015 l 5820 2985 l 5850 2970 l
 5850 2940 l 5880 2925 l 5895 2895 l 5925 2865 l 5940 2835 l
 5955 2805 l 5970 2775 l 6000 2760 l 6015 2730 l 6030 2700 l
 6045 2670 l 6045 2640 l 6060 2610 l 6060 2580 l 6075 2550 l
 6075 2520 l 6090 2490 l 6105 2460 l 6105 2430 l 6120 2400 l
 6120 2370 l 6120 2340 l 6135 2310 l 6150 2280 l 6180 2265 l
 6180 2235 l 6210 2220 l 6240 2205 l 6270 2205 l 6300 2190 l
 6330 2190 l 6360 2175 l 6390 2160 l 6405 2130 l 6435 2130 l
 6465 2115 l 6495 2115 l 6525 2115 l 6555 2115 l 6585 2115 l
 6615 2100 l 6645 2085 l 6675 2085 l 6705 2070 l 6735 2070 l
 6765 2070 l 6795 2070 l 6825 2070 l
 6855 2040 l gs col0 s gr 
/Times-Roman ff 360.00 scf sf
2730 3525 m
gs 1 -1 sc (Particle Path) col0 sh gr
/Times-Roman ff 360.00 scf sf
5070 5520 m
gs 1 -1 sc  62.0 rot (Step) col4 sh gr
/Times-Roman ff 390.00 scf sf
2940 1770 m
gs 1 -1 sc (Different Volume) col0 sh gr
/Times-Roman ff 360.00 scf sf
3225 5400 m
gs 1 -1 sc  60.0 rot (Step Length) col1 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
