# $ Id: globlib.gmk,v 1.16 2000/12/13 09:19:14 gcosmo Exp $
# --------------------------------------------------------------
# Script for compound libraries.  Gabriele Cosmo, 25/6/98.
# --------------------------------------------------------------

ifndef FLUGGINSTALL
  FLUGGINSTALL = ..
endif

include $(FLUGGINSTALL)/config/architecture.gmk

G4LIBDIR = $(G4LIB)/$(G4SYSTEM)

.PHONY : all glob global objs includes clean clean_libs wipe_libs

all:
ifndef G4ODBMS
	@for dir in $(SUBDIRS); do (cd $$dir && $(MAKE)); done
else
	@for dir in $(SUBDIRS); do (cd $$dir && $(MAKE) headers); done
	@for dir in $(SUBDIRS); do (cd $$dir && G4ODBMS_DEPEND=1 &&  \
	               export G4ODBMS_DEPEND && $(MAKE)); done
	@echo Copying tmp schema header from G4TMPDIR to $(G4SCHEMA_INCLUDE)
	@rm -f $(G4SCHEMA_INCLUDE)/*.hh
	@for dir in $(SUBDIRS); do (cd $$dir && $(MAKE) install_schema); done
	@echo Copying tmp schema to $(G4SCHEMA_DIR) for FDID $(G4SCHEMA_FDID)
	@rm -f $(G4SCHEMA_DIR)/G4SCHEMA
	@rm -f $(G4SCHEMA_DIR)/G4SCHEMA.FDDB
	@$(HEP_ODBMS_DIR)/etc/getdb $(G4TMPSCHEMA_BOOT) \
	  $(G4SCHEMA_DIR)/G4SCHEMA $(G4SCHEMA_FDID)
endif
g4libraries_to_build:=

ifneq ($(G4LIB_BUILD_SHARED),)
  SHARED_LIB=$(G4LIBDIR)/lib$(name).$(SHEXT)
  g4libraries_to_build += $(SHARED_LIB)
else
  SHARED_LIB=
endif

ifneq ($(G4LIB_BUILD_STATIC),)
  g4libraries_to_build += $(G4LIBDIR)/lib$(name).a
endif

ifndef G4ODBMS
glob global: objs wipe_libs $(g4libraries_to_build)
else
glob global: headers d_files objs wipe_libs $(g4libraries_to_build) $(G4SCHEMA_DIR)/G4SCHEMA.FDDB
endif

##
## make static libraries
##
ifneq ($(G4LIB_BUILD_STATIC),)
$(G4LIBDIR)/lib$(name).a: \
  $(foreach dir,$(SUBLIBS),$(G4TMP)/$(G4SYSTEM)/$(dir)/obj.last)
	@if [ ! -d $(G4LIBDIR) ] ; then mkdir $(G4LIBDIR) ; fi
	@echo Merging object files in $(G4LIBDIR)/lib$(name).a
	@$(RM) $(G4LIBDIR)/lib$(name).a
#
#
#
	@if [ X$(G4SYSTEM) = XWIN32-VC ]  ; i=NO; \
	then  \
	(( for lib in $(SUBLIBS); \
	do ( if [ $$i = NO ]; \
	then \
	$(AR) $(OUT_LIB)$(G4LIBDIR)/lib$(name).lib \
		$(G4TMP)/$(G4SYSTEM)/$$lib/*.o ; \
	else \
	$(AR) $(G4LIBDIR)/lib$(name).lib $(G4TMP)/$(G4SYSTEM)/$$lib/*.o; \
	fi ); \
	i=YES; \
	done ) ; \
	mv $(G4LIBDIR)/lib$(name).lib $(G4LIBDIR)/lib$(name).a); \
	else \
	(for lib in $(SUBLIBS); \
	do ($(AR) $(OUT_LIB)$(G4LIBDIR)/lib$(name).a \
	$(G4TMP)/$(G4SYSTEM)/$$lib/*.o); \
	done);\
	fi	
#
#
#
	@if [ -f /usr/bin/ranlib -o -f /bin/ranlib ] ; then \
	ranlib $(G4LIBDIR)/lib$(name).a ; fi
endif


##
## make shared libraries
##
ifneq ($(G4LIB_BUILD_SHARED),)
$(SHARED_LIB):	$(foreach dir,$(SUBLIBS),$(G4TMP)/$(G4SYSTEM)/$(dir)/obj.last)
	@if [ ! -d $(G4LIBDIR) ] ; then mkdir $(G4LIBDIR) ; fi
	@echo Creating global shared library $@
	@$(RM) $@
#	use system specific commands to build the library
	$(build-global-shared-lib)
endif

ifdef G4ODBMS
headers:
	@for dir in $(SUBDIRS); do (cd $$dir; $(MAKE) headers); done

d_files:
	@for dir in $(SUBDIRS); do (cd $$dir; $(MAKE) d_files); done

$(G4SCHEMA_DIR)/G4SCHEMA.FDDB: $(G4TMPSCHEMA_DIR)/G4SCHEMA.FDDB
	@rm -f $(G4SCHEMA_DIR)/G4SCHEMA
	@rm -f $(G4SCHEMA_DIR)/G4SCHEMA.FDDB
	@echo Copying schema file to $(G4SCHEMA_DIR) for FDID $(G4SCHEMA_FDID)
	@$(HEP_ODBMS_DIR)/etc/getdb $(G4TMPSCHEMA_BOOT) \
	  $(G4SCHEMA_DIR)/G4SCHEMA $(G4SCHEMA_FDID)
endif

objs:
	@for dir in $(SUBDIRS); \
	  do (cd $$dir; $(MAKE) -q obj && ok=yes; \
	    if [ $$ok ]; \
	    then echo Nothing to be done for lib$(name) in $$dir/.; \
	    else $(MAKE) clean_libs; $(MAKE) obj; \
	    fi; ) \
	  done

includes::
	@for dir in $(SUBDIRS); do (cd $$dir && $(MAKE) $@ ); done
	
wipe_libs:
	@for lib in $(SUBLIBS); do (rm -f $(G4LIBDIR)/lib$$lib.a); done
	@for lib in $(SUBLIBS); do (rm -f $(G4LIBDIR)/lib$$lib.$(SHEXT)); done

clean:
	@echo Cleaning up ...
	@for lib in $(SUBLIBS); do ( \
				 rm -rf $(G4TMP)/$(G4SYSTEM)/$$lib;\
				 rm -f $(G4LIBDIR)/lib$$lib.a;\
				 rm -f $(G4LIBDIR)/lib$$lib.$(SHEXT) );\
				done
	@rm -f $(G4LIBDIR)/lib$(name).a

clean_libs:
	@echo Removing lib$(name).a/.$(SHEXT) and sub-libraries ...
	@for lib in $(SUBLIBS); do ( \
				  rm -f $(G4LIBDIR)/lib$$lib.a;\
				  rm -f $(G4LIBDIR)/lib$$lib.$(SHEXT) );\
				done
	@rm -f $(G4LIBDIR)/lib$(name).a
	@rm -f $(G4LIBDIR)/lib$(name).$(SHEXT)
