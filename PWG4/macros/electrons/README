This example performs a JETAN FastJet analysis and an electron analysis.

Copy this subdirectory and its subdirectories in AFS to your local
laptop work directory.  Replace "kread" with your username in all of
the files in this example.  Be sure to replace my email address with
yours in mergeout.jdl .

To execute this example create a subdirectory in AliEn called
$HOME/work12.  Then from your laptop work directory, type:

root -q -b -l mylauncher.C

That will do a robust file upload and submit the job.  If you need to
submit the job again, just do this:

aliensh
cd ~/work12
submit anaJete.jdl

Later, merge via:

submit mergeout.jdl


The example is set for input (production) ESDs.
To adjust for an input AOD instead:
1. Adjust INDIR and PATTERN in anaJete.sh to point to an AOD directory.
2. Change kInputData to "AOD" in anaJete.C
4. Change kInputIsESD to kFALSE in ConfigJetAnalysisFastJet.C.
3. Change kInputIsESD to kFALSE in ConfigAnalysisElectron.C.
4. Change kFollowsFilter to kFALSE in ConfigJetAnalysisFastJet.C.
5. Change kFollowsFilter to kFALSE in ConfigAnalysisElectron.C.

[6. In order to merge two input AODs, do these 5 steps above and change
 kMergeAODs to kTRUE in anaJete.C.]


To run locally, just type "anaJete.sh".

The present PAR files are ready to go.  They contain a few necessary
but unofficial patches relative to AliRoot trunk (which are also
available in the provided patch subdirectory tree).  This is
temporary.  If you need to make new PAR files, from your work
directory type:
 
parmaker4 PWG4PartCorrBase remote patch
parmaker4 PWG4PartCorrDep remote patch
parmaker4 JETAN remote patch
parmaker4 FASTJETAN remote patch

Note that parmaker4 can build good PAR files immediately after the svn
checkout of AliRoot.  It does not depend on doing $ALICE_ROOT/make .



*****************************************************

DETAILS:

Even though cgal and boost are invoked by the JDL, they do not
actually appear in the JDL.  The PackMan AliEn package facility will
indeed properly load the external fastjet package and its dependencies
using the JDL in this example.

