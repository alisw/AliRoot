.TH alibtool 4 "" "ALICE Reference Manual"
.ad b
.SH NAME
alibtool - a shell script to help makeing Make modules for AliRoot
.SH SYNOPSIS
alirun <command> <commandparameters>

command must be one of the following:

        mkmodule
        depend
        dependF


.SH DESCRIPTION

This scipts is called with a primary command and a commandparameter. It generates output on stdout, so normally it is called with a redirection like alibtool mkmoudle STEER > STEER/module.mk

The command is one of the following

depend
       Makes the dependencies for the file specified as second argument (c and cxx files)

dependF
       Makes the dependencies for the file specified as second argument (fortran files)

mkmoudle
       Creates the module.mk for the the given directory specified as the second argument.

.SH MKMOUDLE

When alibtool is called with the mkmodule command it searches the directory given as the second argument for files called *.pkg. If a file (possibly several) is found, it will create a file called module.mk based on these files. For example if running alibtool mkmodule STEER, it will search the STEER directory and create STEER/module.mk based on all .pkg files is STEER directory. If a file called libSTEER.pkg is found, then module.mk will have a section devoted to makeing library libSTEER.so with alle the sourcefiles specified in libSTEER.pkg. If a file called binSTEER.pkg is found the module.mk file will create an executable called STEER. Several *.pkg files can be placed in the same directory. The module.mk files is created on background of templates/header.tpl and templates/module.mk by variable substituion of variables @MODULE@ @PACKAGE@ and @TYPE@.

.SH PKG FILES


The syntax for the pkg file is very simple. You specify the sources, headers and possibly extra include or link options. The *.pkg files is just inserted "as is" in the module.mk file, so normal Makefile syntax can be used. These variables can be specified: SRCS, FSRCS, CSRCS, HDRS, CHDRS, DHDR, EINCLUDE, ELIBS, ELIBSDIR, PACKFFLAGS, PACKCFLAGS, PACKCXXFLAGS. The first five is just the c++ sources, fortran sources, c sources, c++ headers and c headers. DHDR is the dictionary header and is the LinkDef file. EINCLUDE, ELIBS and ELIBSDIR is extra includedirs, libraries and library search paths. If for example a binary is to be linked against $ALICE_ROOT/lib/tgt_$ALICE_TARGET/libminicern.so the variable ELIBSDIR would be set to lib/tgt_$ALICE_TARGET and ELIBS = minicern. Notice that -L and -l is not needed. If the PACKFFLAGS, PACKCFLAGS or PACKCXXFLAGS is not set it will be set to the default options (Set in config/Makefile.$ALICE_TARGET. For example on Linux GEANT321 has to be compiled without -O options, so a line like PACKFFLAGS := $(filter-out -O%,$(FFLAGS)) is needed.


.SH DEPEND

If alibtool is called with the depend command it will generate a dependecy file for the sourcefile given as second argument. This only goes for c++ and c files. If dependencies for fortran-fiels is needed, call alibtool with command dependF. The dependencies is made with rmkdepend.


.SH DEPENDF

The same as depend, but for fortran files.

